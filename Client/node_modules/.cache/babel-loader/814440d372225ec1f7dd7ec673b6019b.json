{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  key: Date.now(),\n  id: Date.now(),\n  title: \"Church Street Blues\",\n  bpm: 150\n}];\nconst SetListSlice = createSlice({\n  name: \"SetListSlice\",\n  initialState,\n  reducers: {\n    addSong: (state, action) => {\n      const existsInArray = state.some(song => song.title === action.payload.title);\n\n      if (existsInArray) {\n        window.alert(\"Already in setlist!\");\n        return;\n      }\n\n      const newSong = {\n        key: Date.now(),\n        id: Date.now(),\n        title: action.payload.title,\n        bpm: action.payload.bpm\n      };\n      state.push(newSong);\n    },\n    deleteSong: (state, action) => {\n      return state.filter(song => song.id !== action.payload.id);\n    }\n  }\n});\nexport const {\n  addSong,\n  deleteSong\n} = SetListSlice.actions;\nexport default SetListSlice.reducer;","map":{"version":3,"sources":["/Users/davidsanders/Documents/CodingProjects/setlists/Client/src/features/setListSlice.js"],"names":["createSlice","initialState","key","Date","now","id","title","bpm","SetListSlice","name","reducers","addSong","state","action","existsInArray","some","song","payload","window","alert","newSong","push","deleteSong","filter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL,EADP;AAEEC,EAAAA,EAAE,EAAEF,IAAI,CAACC,GAAL,EAFN;AAGEE,EAAAA,KAAK,EAAE,qBAHT;AAIEC,EAAAA,GAAG,EAAE;AAJP,CADmB,CAArB;AASA,MAAMC,YAAY,GAAGR,WAAW,CAAC;AAC/BS,EAAAA,IAAI,EAAE,cADyB;AAE/BR,EAAAA,YAF+B;AAG/BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1B,YAAMC,aAAa,GAAGF,KAAK,CAACG,IAAN,CACnBC,IAAD,IAAUA,IAAI,CAACV,KAAL,KAAeO,MAAM,CAACI,OAAP,CAAeX,KADpB,CAAtB;;AAGA,UAAIQ,aAAJ,EAAmB;AACjBI,QAAAA,MAAM,CAACC,KAAP,CAAa,qBAAb;AACA;AACD;;AAED,YAAMC,OAAO,GAAG;AACdlB,QAAAA,GAAG,EAAEC,IAAI,CAACC,GAAL,EADS;AAEdC,QAAAA,EAAE,EAAEF,IAAI,CAACC,GAAL,EAFU;AAGdE,QAAAA,KAAK,EAAEO,MAAM,CAACI,OAAP,CAAeX,KAHR;AAIdC,QAAAA,GAAG,EAAEM,MAAM,CAACI,OAAP,CAAeV;AAJN,OAAhB;AAMAK,MAAAA,KAAK,CAACS,IAAN,CAAWD,OAAX;AACD,KAjBO;AAkBRE,IAAAA,UAAU,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAC7B,aAAOD,KAAK,CAACW,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYQ,MAAM,CAACI,OAAP,CAAeZ,EAAlD,CAAP;AACD;AApBO;AAHqB,CAAD,CAAhC;AA2BA,OAAO,MAAM;AAAEM,EAAAA,OAAF;AAAWW,EAAAA;AAAX,IAA0Bd,YAAY,CAACgB,OAA7C;AACP,eAAehB,YAAY,CAACiB,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = [\n  {\n    key: Date.now(),\n    id: Date.now(),\n    title: \"Church Street Blues\",\n    bpm: 150,\n  },\n];\n\nconst SetListSlice = createSlice({\n  name: \"SetListSlice\",\n  initialState,\n  reducers: {\n    addSong: (state, action) => {\n      const existsInArray = state.some(\n        (song) => song.title === action.payload.title\n      );\n      if (existsInArray) {\n        window.alert(\"Already in setlist!\");\n        return;\n      }\n\n      const newSong = {\n        key: Date.now(),\n        id: Date.now(),\n        title: action.payload.title,\n        bpm: action.payload.bpm,\n      };\n      state.push(newSong);\n    },\n    deleteSong: (state, action) => {\n      return state.filter((song) => song.id !== action.payload.id);\n    },\n  },\n});\n\nexport const { addSong, deleteSong } = SetListSlice.actions;\nexport default SetListSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}